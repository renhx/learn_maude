search in FARMER-CROSS-THE-RIVER : p(f w s c, b(empty)) | p(empty, noboat) | p(empty, noboat) =>+ P1:Place | P2:Place | p(f w s c, B) .

Solution 1 (state 60)
states: 61  rewrites: 9241 in 5ms cpu (5ms real) (1540423 rewrites/second)
P1:Place --> p(empty, noboat)
P2:Place --> p(empty, noboat)
B --> b(empty)
Maude> show path 60 .
state 0, River: p(f w s c, b(empty)) | p(empty, noboat) | p(empty, noboat)
===[ crl p(S1 A1, b(S2)) | RIVER | BANK2 => p(S1, b(S2 A1)) | RIVER | BANK2 if (safe?(S1) and safe?(S2 A1)) and #(S2) < 2 = true [label bank1abord] . ]===>
state 2, River: p(f w c, b(s)) | p(empty, noboat) | p(empty, noboat)
===[ crl p(S1 A1, b(S2)) | RIVER | BANK2 => p(S1, b(S2 A1)) | RIVER | BANK2 if (safe?(S1) and safe?(S2 A1)) and #(S2) < 2 = true [label bank1abord] . ]===>
state 5, River: p(w c, b(f s)) | p(empty, noboat) | p(empty, noboat)
===[ crl p(S1, b(S2)) | p(S3, noboat) | BANK2 => p(S1, noboat) | p(S3, b(S2)) | BANK2 if #f(S2) > 0 = true [label bank1river] . ]===>
state 6, River: p(w c, noboat) | p(empty, b(f s)) | p(empty, noboat)
===[ rl BANK1 | p(S1, b(S2)) | p(S3, noboat) => BANK1 | p(S1, noboat) | p(S3, b(S2)) [label riverbank2] . ]===>
state 7, River: p(w c, noboat) | p(empty, noboat) | p(empty, b(f s))
===[ crl BANK1 | RIVER | p(S1, b(S2 A1)) => BANK1 | RIVER | p(S1 A1, b(S2)) if safe?(S2) and safe?(S1 A1) = true [label bank2getoff] . ]===>
state 9, River: p(w c, noboat) | p(empty, noboat) | p(s, b(f))
===[ crl BANK1 | p(S1, noboat) | p(S2, b(S3)) => BANK1 | p(S1, b(S3)) | p(S2, noboat) if #f(S3) > 0 = true [label bank2river] . ]===>
state 11, River: p(w c, noboat) | p(empty, b(f)) | p(s, noboat)
===[ rl p(S1, noboat) | p(S2, b(S3)) | BANK2 => p(S1, b(S3)) | p(S2, noboat) | BANK2 [label riverbank1] . ]===>
state 12, River: p(w c, b(f)) | p(empty, noboat) | p(s, noboat)
===[ crl p(S1 A1, b(S2)) | RIVER | BANK2 => p(S1, b(S2 A1)) | RIVER | BANK2 if (safe?(S1) and safe?(S2 A1)) and #(S2) < 2 = true [label bank1abord] . ]===>
state 13, River: p(c, b(f w)) | p(empty, noboat) | p(s, noboat)
===[ crl p(S1, b(S2)) | p(S3, noboat) | BANK2 => p(S1, noboat) | p(S3, b(S2)) | BANK2 if #f(S2) > 0 = true [label bank1river] . ]===>
state 16, River: p(c, noboat) | p(empty, b(f w)) | p(s, noboat)
===[ rl BANK1 | p(S1, b(S2)) | p(S3, noboat) => BANK1 | p(S1, noboat) | p(S3, b(S2)) [label riverbank2] . ]===>
state 20, River: p(c, noboat) | p(empty, noboat) | p(s, b(f w))
===[ crl BANK1 | RIVER | p(S1, b(S2 A1)) => BANK1 | RIVER | p(S1 A1, b(S2)) if safe?(S2) and safe?(S1 A1) = true [label bank2getoff] . ]===>
state 23, River: p(c, noboat) | p(empty, noboat) | p(f s, b(w))
===[ crl BANK1 | RIVER | p(S1, b(S2 A1)) => BANK1 | RIVER | p(S1 A1, b(S2)) if safe?(S2) and safe?(S1 A1) = true [label bank2getoff] . ]===>
state 25, River: p(c, noboat) | p(empty, noboat) | p(f w s, b(empty))
===[ crl BANK1 | RIVER | p(S1 A1, b(S2)) => BANK1 | RIVER | p(S1, b(S2 A1)) if (safe?(S1) and safe?(S2 A1)) and #(S2) < 2 = true [label bank2abord] . ]===>
state 27, River: p(c, noboat) | p(empty, noboat) | p(f w, b(s))
===[ crl BANK1 | RIVER | p(S1 A1, b(S2)) => BANK1 | RIVER | p(S1, b(S2 A1)) if (safe?(S1) and safe?(S2 A1)) and #(S2) < 2 = true [label bank2abord] . ]===>
state 29, River: p(c, noboat) | p(empty, noboat) | p(w, b(f s))
===[ crl BANK1 | p(S1, noboat) | p(S2, b(S3)) => BANK1 | p(S1, b(S3)) | p(S2, noboat) if #f(S3) > 0 = true [label bank2river] . ]===>
state 31, River: p(c, noboat) | p(empty, b(f s)) | p(w, noboat)
===[ rl p(S1, noboat) | p(S2, b(S3)) | BANK2 => p(S1, b(S3)) | p(S2, noboat) | BANK2 [label riverbank1] . ]===>
state 33, River: p(c, b(f s)) | p(empty, noboat) | p(w, noboat)
===[ crl p(S1, b(S2 A1)) | RIVER | BANK2 => p(S1 A1, b(S2)) | RIVER | BANK2 if safe?(S2) and safe?(S1 A1) = true [label bank1getoff] . ]===>
state 35, River: p(f c, b(s)) | p(empty, noboat) | p(w, noboat)
===[ crl p(S1, b(S2 A1)) | RIVER | BANK2 => p(S1 A1, b(S2)) | RIVER | BANK2 if safe?(S2) and safe?(S1 A1) = true [label bank1getoff] . ]===>
state 37, River: p(f s c, b(empty)) | p(empty, noboat) | p(w, noboat)
===[ crl p(S1 A1, b(S2)) | RIVER | BANK2 => p(S1, b(S2 A1)) | RIVER | BANK2 if (safe?(S1) and safe?(S2 A1)) and #(S2) < 2 = true [label bank1abord] . ]===>
state 39, River: p(f s, b(c)) | p(empty, noboat) | p(w, noboat)
===[ crl p(S1 A1, b(S2)) | RIVER | BANK2 => p(S1, b(S2 A1)) | RIVER | BANK2 if (safe?(S1) and safe?(S2 A1)) and #(S2) < 2 = true [label bank1abord] . ]===>
state 41, River: p(s, b(f c)) | p(empty, noboat) | p(w, noboat)
===[ crl p(S1, b(S2)) | p(S3, noboat) | BANK2 => p(S1, noboat) | p(S3, b(S2)) | BANK2 if #f(S2) > 0 = true [label bank1river] . ]===>
state 43, River: p(s, noboat) | p(empty, b(f c)) | p(w, noboat)
===[ rl BANK1 | p(S1, b(S2)) | p(S3, noboat) => BANK1 | p(S1, noboat) | p(S3, b(S2)) [label riverbank2] . ]===>
state 45, River: p(s, noboat) | p(empty, noboat) | p(w, b(f c))
===[ crl BANK1 | RIVER | p(S1, b(S2 A1)) => BANK1 | RIVER | p(S1 A1, b(S2)) if safe?(S2) and safe?(S1 A1) = true [label bank2getoff] . ]===>
state 48, River: p(s, noboat) | p(empty, noboat) | p(w c, b(f))
===[ crl BANK1 | p(S1, noboat) | p(S2, b(S3)) => BANK1 | p(S1, b(S3)) | p(S2, noboat) if #f(S3) > 0 = true [label bank2river] . ]===>
state 52, River: p(s, noboat) | p(empty, b(f)) | p(w c, noboat)
===[ rl p(S1, noboat) | p(S2, b(S3)) | BANK2 => p(S1, b(S3)) | p(S2, noboat) | BANK2 [label riverbank1] . ]===>
state 53, River: p(s, b(f)) | p(empty, noboat) | p(w c, noboat)
===[ crl p(S1 A1, b(S2)) | RIVER | BANK2 => p(S1, b(S2 A1)) | RIVER | BANK2 if (safe?(S1) and safe?(S2 A1)) and #(S2) < 2 = true [label bank1abord] . ]===>
state 54, River: p(empty, b(f s)) | p(empty, noboat) | p(w c, noboat)
===[ crl p(S1, b(S2)) | p(S3, noboat) | BANK2 => p(S1, noboat) | p(S3, b(S2)) | BANK2 if #f(S2) > 0 = true [label bank1river] . ]===>
state 56, River: p(empty, noboat) | p(empty, b(f s)) | p(w c, noboat)
===[ rl BANK1 | p(S1, b(S2)) | p(S3, noboat) => BANK1 | p(S1, noboat) | p(S3, b(S2)) [label riverbank2] . ]===>
state 58, River: p(empty, noboat) | p(empty, noboat) | p(w c, b(f s))
===[ crl BANK1 | RIVER | p(S1, b(S2 A1)) => BANK1 | RIVER | p(S1 A1, b(S2)) if safe?(S2) and safe?(S1 A1) = true [label bank2getoff] . ]===>
state 59, River: p(empty, noboat) | p(empty, noboat) | p(f w c, b(s))
===[ crl BANK1 | RIVER | p(S1, b(S2 A1)) => BANK1 | RIVER | p(S1 A1, b(S2)) if safe?(S2) and safe?(S1 A1) = true [label bank2getoff] . ]===>
state 60, River: p(empty, noboat) | p(empty, noboat) | p(f w s c, b(empty))
